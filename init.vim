" Dark powered mode of SpaceVim, generated by SpaceVim automatically.
let g:spacevim_enable_debug = 0
let g:spacevim_realtime_leader_guide = 1
call SpaceVim#layers#load('incsearch')
" call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#go')
" call SpaceVim#layers#load('lang#java')
" call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#python')
" call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
" call SpaceVim#layers#load('lang#xml')
call SpaceVim#layers#load('shell')
" call SpaceVim#layers#load('tools#screensaver')
let g:spacevim_enable_vimfiler_welcome = 1
let g:deoplete#auto_complete_delay = 150
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:spacevim_enable_neomake = 0
if has('python3')
    let g:ctrlp_map = ''
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif

let g:spacevim_plugin_manager = 'dein'
let g:spacevim_custom_plugins = [
      \['kana/vim-operator-user'],
      \['rhysd/vim-clang-format'],
      \['ntpeters/vim-better-whitespace'],
      \['jimenezrick/vimerl'],
      \['Valloric/YouCompleteMe'],
      \['rdnetto/YCM-Generator'],
      \['tomasiser/vim-code-dark'],
      \['davidhalter/jedi-vim'],
      \['Chiel92/vim-autoformat']
      \]

let g:spacevim_disabled_plugins = [
      \['Rip-Rip/clang_complete'],
      \['justmao945/vim-clang'],
      \['zchee/deoplete-clang'],
      \['tenfyzhong/CompleteParameter'],
      \['tweekmonster/deoplete-clang2'],
      \['neomake/neomake'],
      \['sbdchd/neoformat'],
      \['wsdjeg/syntastic'],
      \['tenfyzhong/CompleteParameter'],
      \]

let g:spacevim_max_column = 80
let g:spacevim_enable_ycm = 1
let g:spacevim_github_username = 'bkryza'
let g:indentLine_enabled = 0

let g:spacevim_enable_vimfiler_gitstatus = 0

let g:spacevim_colorscheme = 'codedark'

let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
let g:ycm_extra_conf_globlist=['~/.vim/*']
let g:ycm_collect_identifiers_from_tags_files = 0
let g:ycm_filetype_blacklist={
            \ 'vim' : 1,
            \ 'tagbar' : 1,
            \ 'qf' : 1,
            \ 'notes' : 1,
            \ 'markdown' : 1,
            \ 'md' : 1,
            \ 'unite' : 1,
            \ 'text' : 1,
            \ 'vimwiki' : 1,
            \ 'pandoc' : 1,
            \ 'infolog' : 1,
            \ 'mail' : 1
            \}
let g:ycm_enable_diagnostic_highlighting = 1
let g:ycm_show_diagnostics_ui = 0
let g:ycm_enable_diagnostic_signs = 1
let g:ycm_echo_current_diagnostic = 1
let g:ycm_complete_in_comments = 1
let g:ycm_log_level = 'error'
let g:ycm_confirm_extra_conf = 0

let g:syntastic_mode_map = {
            \ "mode": "passive",
            \ "active_filetypes": ["python"],
            \ "passive_filetypes": [] }

" Default Tabs & spaces
set tabstop=4     " a tab is four spaces
set shiftwidth=4  " number of spaces to use for autoindenting
set softtabstop=4
set expandtab
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set smarttab      " insert tabs on the start of a line according to
                  "    shiftwidth, not tabstop
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
filetype plugin indent on
filetype indent on
syntax enable

" Remove and highlight all trailing spaces on write
autocmd FileType h,c,cc,cpp,java,yaml,md,py,pl autocmd BufWritePre <buffer> %s/\s\+$//e

map <F1> :bd<CR>

" Clang format
map <C-a> <esc>ggVG<CR>
"autocmd FileType c,cpp,cc,h,objc map <buffer><C-f> :ClangFormat<CR>
"autocmd FileType c,cpp,cc,h,objc imap <buffer><C-f> <ESC>:ClangFormat<CR>i"

" Clang
nnoremap <F12> :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Python
nnoremap <F6> :Autoformat<CR>
nnoremap <silent> <F5> :!clear;python %<CR>

" Onedata commands
command OneclientYcm YcmGenerateConfig -C=\"-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib -DWITH_CEPH=OFF\" -e --verbose


nnoremap <C-S-f> :call SpaceVim#plugins#flygrep#open()<CR>
nnoremap <C-Right>  :bnext<CR>
nnoremap <C-Left> :bp<CR>


" let g:guifont = 'DejaVu\ Sans\ Mono\ for\ Powerline:h18'
" let g:guifont = 'DejaVu\ Sans\ Mono\ for\ Powerline:h18'
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h18

autocmd VimEnter * SyntasticToggleMode " disable syntastic by default
